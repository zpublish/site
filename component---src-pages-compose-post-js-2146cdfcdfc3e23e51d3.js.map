{"version":3,"sources":["webpack://web/./src/pages/compose/post.js"],"names":["Link","children","to","href","_TextInput","React","ref","components","multiline","style","props","htmlElName","useState","View","setView","useEffect","TextArea","Input","fontSize","outline","borderWidth","AutoTextArea","textAreaRef","useRef","text","setText","textAreaHeight","setTextAreaHeight","parentHeight","setParentHeight","current","scrollHeight","minHeight","placeholder","as","fontFamily","height","resize","onChange","event","target","value","onChangeText","rows","CopyIcon","version","xmlns","x","y","width","viewBox","overflow","enableBackground","id","transform","fill","fillRule","stroke","strokeWidth","clipRule","copyTextToClipboard","navigator","clipboard","writeText","byteSize","str","Blob","size","navOverlayOpen","setNavOverlayOpen","stage","setStage","post","setPost","useWindowViewport","copyIsHovered","setCopyIsHovered","copyIsClicked","setCopyIsClicked","error","setError","zaddr","memo","unescape","encodeURIComponent","window","Buffer","from","toString","btoa","replace","length","title","bg","onClick","write","pt","px","pb","mt","color","my","justifyContent","fontWeight","py","cursor","borderColor","zecpages","mb","bold","alignItems","bgColor","fgColor","includeMargin","maxHeight","maxWidth","borderRadius","p","wordBreak","lineHeight","ml","setTimeout","onMouseEnter","onMouseLeave","opacity","icon","CopyBoxIcon","tweet","textDecoration","flexDirection","flex","outlined"],"mappings":"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","file":"component---src-pages-compose-post-js-2146cdfcdfc3e23e51d3.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n// import { Link } from 'gatsby';\n\nimport { Button, Box, Text, TextInput, Row, Line, useWindowDimensions } from 'elemental-react';\nimport { QRCode, Icon } from '@elemental-zcash/components';\nimport { CopyBoxIcon } from '@elemental-zcash/icons';\n\nimport Layout from '../../components/layout';\nimport SEO from '../../components/seo';\nimport AppBar from '../../../../components/lib/common/AppBar';\nimport Section from '../../../../components/lib/common/Section';\nimport useWindowViewport from '../../hooks/use-window-viewport';\n\nconst Link = ({ children, to }) => <a href={to}>{children}</a>;\n\n// const Footer = () => (\n//   <Box bg=\"black\">\n//     <Link to=\"/page-2/\">Go to page 2</Link>\n//   </Box>\n// );\n\nconst _TextInput = React.forwardRef(({ components, multiline, style, ...props }, ref) => {\n  const htmlElName = multiline ? 'textarea' : 'input';\n  // const { View = 'input' } = components || {};\n  const [View, setView] = useState(components?.View || htmlElName);\n\n  useEffect(() => {\n    if (multiline) {\n      setView(components?.TextArea || 'textarea');\n    } else {\n      setView(components?.Input || 'input');\n    }\n  }, [multiline]);\n\n  return (\n    <View\n      ref={ref}\n      style={{ fontSize: 14, outline: 'none', borderWidth: 0, ...style }}\n      {...props}\n    />\n  );\n});\n\nconst AutoTextArea = ({ ...props }) => {\n  const textAreaRef = useRef(null);\n  const [text, setText] = useState('');\n  const [textAreaHeight, setTextAreaHeight] = useState('auto');\n  const [parentHeight, setParentHeight] = useState('auto');\n\n  const onChangeHandler = (event) => {\n    setTextAreaHeight(\"auto\");\n\t\tsetParentHeight(`${textAreaRef.current.scrollHeight}px`);\n\t\tsetText(event.target.value);\n\n\t\tif (props.onChangeText) {\n      // console.debug('debug: ', { onChangeText: props.onChangeText, value: event.target.value });\n      props.onChangeText(event.target.value);\n\t\t}\n  }\n\n  useEffect(() => {\n    if (!textAreaRef?.current) {\n      return;\n    }\n\n    setParentHeight(`${textAreaRef?.current.scrollHeight}px`);\n    setTextAreaHeight(`${textAreaRef?.current.scrollHeight}px`);\n  }, [text, textAreaRef]);\n\n  return (\n    <Box minHeight={parentHeight}>\n      <_TextInput\n        ref={textAreaRef}\n        multiline\n        placeholder=\"What’s up?\"\n        fontSize={30}\n        as=\"textarea\"\n        style={{ fontFamily: 'IBM Plex Sans', minHeight: 220, height: textAreaHeight, fontSize: 30, outline: 'none', resize: 'none' }}\n        onChange={onChangeHandler}\n        rows={1}\n      />\n    </Box>\n  );\n};\n\nconst CopyIcon = ({ ...props }) => {\n  return (\n\n    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" style={{ overflow: 'visible', enableBackground: 'new 0 0 24 24' }}>\n    <g id=\"Page-1_1_\">\n      <g id=\"Artboard_1_\" transform=\"translate(-4.000000, -4.000000)\">\n        <g id=\"Group-14-Copy-2_1_\" transform=\"translate(4.000000, 4.000000)\">\n          <rect id=\"Rectangle_9_\" style={{ fill: 'none' }} width=\"24\" height=\"24\"/>\n          <g id=\"Group-14-Copy_1_\" transform=\"translate(3.000000, 1.000000)\">\n            <g id=\"Group-12-Copy-2_1_\" transform=\"translate(0.000000, 5.000000)\">\n              <rect id=\"Rectangle_8_\" x=\"1\" y=\"1\" style={{ fillRule: 'evenodd', fill: '#FFFFFF', stroke: '#000000', strokeWidth: 2 }} width=\"12\" height=\"15\"/>\n              <g id=\"Group-11_3_\">\n                <g transform=\"translate(4.000000, 5.000000)\">\n                  <rect id=\"Rectangle_7_\" style={{ fillRule: 'evenodd', clipRule: 'evenodd' }} width=\"6\" height=\"1\"/>\n                  <rect id=\"Rectangle-Copy-6_3_\" y=\"3\" style={{ fillRule: 'evenodd', clipRule: 'evenodd' }} width=\"6\" height=\"1\"/>\n                  <rect id=\"Rectangle-Copy-7_3_\" y=\"6\" style={{ fillRule: 'evenodd', clipRule: 'evenodd' }} width=\"6\" height=\"1\"/>\n                </g>\n              </g>\n            </g>\n            <g id=\"Group-12_1_\" transform=\"translate(5.000000, 0.000000)\">\n              <rect id=\"Rectangle_6_\" x=\"1\" y=\"1\" style={{ fillRule: 'evenodd', clipRule: 'evenodd', fill: '#EFFFF9', stroke: '#001CFF', strokeWidth: 2 }} width=\"12\" height=\"15\"/>\n              <g id=\"Group-11_2_\">\n                <g transform=\"translate(4.000000, 5.000000)\">\n                  <rect id=\"Rectangle_5_\" style={{ fillRule: 'evenodd', clipRule: 'evenodd' }} width=\"6\" height=\"1\"/>\n                  <rect id=\"Rectangle-Copy-6_2_\" y=\"3\" style={{ fillRule: 'evenodd', clipRule: 'evenodd' }} width=\"6\" height=\"1\"/>\n                  <rect id=\"Rectangle-Copy-7_2_\" y=\"6\" style={{ fillRule: 'evenodd', clipRule: 'evenodd' }} width=\"6\" height=\"1\"/>\n                </g>\n              </g>\n            </g>\n          </g>\n        </g>\n      </g>\n    </g>\n    </svg>\n    \n  );\n};\n\n\nconst copyTextToClipboard = async (text) => {\n  if (!navigator.clipboard) {\n    return;\n  }\n  return await navigator.clipboard.writeText(text);\n}\n\nconst toBase64 = (text) => {\n  if (typeof window === 'undefined') {\n    return Buffer.from(text).toString('base64')\n  } else {\n    return btoa(text);\n  }\n};\n\nconst TwitterIcon = () => {\n  return (\n<svg width=\"18px\" height=\"18px\" viewBox=\"0 0 18 18\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"Home\" transform=\"translate(-58.000000, -442.000000)\">\n            <g id=\"Group-5\" transform=\"translate(32.000000, 416.000000)\">\n                <g id=\"Group-2\" transform=\"translate(27.000000, 27.000000)\">\n                    <g id=\"Twitter-social-icons---circle---blue-Copy\" fill-rule=\"nonzero\">\n                        <g id=\"Dark_Blue\" fill=\"#1B9DF0\">\n                            <circle id=\"Oval\" cx=\"8\" cy=\"8\" r=\"8\"></circle>\n                        </g>\n                        <g id=\"Logo__x2014__FIXED\" transform=\"translate(3.500000, 4.500000)\" fill=\"#FFFFFF\">\n                            <path d=\"M2.98063006,7.5 C6.56790123,7.5 8.5293742,4.61387435 8.5293742,2.11256545 C8.5293742,2.03010471 8.5293742,1.94764398 8.52532993,1.86910995 C8.9054917,1.60209424 9.23712218,1.26832461 9.5,0.887434555 C9.15219242,1.03664921 8.77607493,1.13874346 8.37973606,1.18586387 C8.78416347,0.95026178 9.09152831,0.581151832 9.23712218,0.137434555 C8.86100468,0.353403141 8.44444444,0.510471204 7.99957429,0.596858639 C7.64367816,0.227748691 7.13814389,5.58017855e-16 6.57598978,5.58017855e-16 C5.50021286,5.58017855e-16 4.62664964,0.848167539 4.62664964,1.89267016 C4.62664964,2.04188482 4.64282673,2.18717277 4.6792252,2.32460733 C3.05747126,2.2460733 1.62175394,1.4921466 0.659216688,0.345549738 C0.493401447,0.62434555 0.396338868,0.95026178 0.396338868,1.29581152 C0.396338868,1.95157068 0.740102171,2.53272251 1.26585781,2.87041885 C0.946360153,2.86256545 0.647083865,2.77617801 0.384206045,2.63481675 C0.384206045,2.64267016 0.384206045,2.65052356 0.384206045,2.65837696 C0.384206045,3.57722513 1.05555556,4.33900524 1.94934014,4.51570681 C1.78756918,4.55890052 1.61366539,4.58246073 1.43571733,4.58246073 C1.31034483,4.58246073 1.1890166,4.57068063 1.06768838,4.54712042 C1.3143891,5.30104712 2.0342699,5.84685864 2.88761175,5.86256545 C2.22030651,6.36910995 1.37909749,6.67146597 0.465091528,6.67146597 C0.307364836,6.67146597 0.153682418,6.66361257 -1.14945185e-15,6.64397906 C0.853341848,7.18586387 1.88058748,7.5 2.98063006,7.5\" id=\"Path\"></path>\n                        </g>\n                    </g>\n                    <circle id=\"Oval\" stroke=\"#FFFFFF\" cx=\"8\" cy=\"8\" r=\"8.5\"></circle>\n                </g>\n            </g>\n        </g>\n    </g>\n</svg>\n  )\n}\n\nconst byteSize = str => new Blob([str]).size;\n\nconst IndexPage = () => {\n  const [navOverlayOpen, setNavOverlayOpen] = useState(false);\n  const [stage, setStage] = useState('write');\n  const [post, setPost] = useState('');\n  const { width } = useWindowViewport();\n  const [copyIsHovered, setCopyIsHovered] = useState(false);\n  const [copyIsClicked, setCopyIsClicked] = useState(false);\n  const [error, setError] = useState(null);\n\n  const zaddr = 'zs1j29m7zdhhyy2eqrz89l4zhk0angqjh368gqkj2vgdyqmeuultteny36n3qsm47zn8du5sw3ts7f';\n\n  const memo = toBase64(unescape(encodeURIComponent(post))).replace('=', '');\n\n  useEffect(() => {\n    if (byteSize(memo) >= 512) {\n      setError('Zcash memos are capped to 512 bytes, please shorten your post.');\n    } else if (post?.length > 280) {\n      setError('Tweets are limited to 280 characters, please shorten your post.');\n    } else {\n      setError(null);\n    }\n  }, [byteSize, memo, post]);\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <Box\n        height=\"100vh\"\n        width=\"100vw\"\n        bg=\"white\"\n      >\n        <AppBar>\n          <AppBar.MenuIcon onClick={() => { setNavOverlayOpen(!navOverlayOpen); }} />\n          <AppBar.Title />\n          <AppBar.Fill />\n        </AppBar>\n        {{\n          write: (\n            <>\n              <Section pt={52} px={[32, 80, 0]} pb=\"0px\">\n                {/* <TextInput as=\"textarea\"  /> */}\n                <AutoTextArea onChangeText={(text) => setPost(text)}/>\n                <Line bg=\"#E4E4E4\" width=\"100%\" mt={40} />\n                {error && (\n                  <Text color=\"red\" fontSize={12} fontFamily=\"IBM Plex Sans\" my=\"8px\">{error}</Text>\n                )}\n              </Section>\n              <Section pt={32} px={[32, 80, 0]}>\n                {/* <Text fontSize={16} fontFamily=\"IBM Plex Sans\" fontWeight={500} pb=\"8px\">\n                  Share to\n                </Text>\n                <Row>\n                  <Box position=\"relative\">\n                    <Box position=\"absolute\" bottom={0} right={12}>\n                      <TwitterIcon />\n                    </Box>\n                    <Circle borderColor=\"#12BD60\" borderWidth={3} size={40} mr={16} />\n                  </Box>\n                  <Box position=\"relative\">\n                    <Box position=\"absolute\" bottom={0} right={12}>\n                      <TwitterIcon />\n                    </Box>\n                    <Circle borderColor=\"#CFCFCF\" borderWidth={1} size={40} mr={16} />\n                  </Box>\n                  <Circle borderColor=\"#CFCFCF\" borderWidth={1} size={40} />\n                </Row> */}\n                <Row justifyContent=\"flex-end\">\n                  <Box onClick={() => (post && !error) ? setStage('zecpages') : null}>\n                    <Button fontFamily=\"IBM Plex Serif\" fontWeight={600} py=\"8px\" px={24} style={{ cursor: 'pointer' }} borderColor={(!post || error) ? 'gray' : 'black'} color={(!post || error) ? 'gray' : 'black'}>\n                      Post\n                    </Button>\n                  </Box>\n                </Row>\n              </Section>\n            </>\n          ),\n          zecpages: (\n            <>\n              <Section>\n                <Row justifyContent=\"flex-end\" mb={24}>\n                  <Text fontFamily=\"IBM Plex Sans\" bold fontSize={24}>\n                    1 / 2\n                  </Text>\n                </Row>\n                <Box alignItems=\"center\">\n                  <Text fontFamily=\"IBM Plex Mono\" fontSize={24} mb={24}>Send 0.001 ZEC to</Text>\n                  <Box>\n                    <QRCode\n                      bgColor=\"#ffffff\"\n                      fgColor=\"#000000\"\n                      includeMargin={true}\n                      style={{ width: width * 0.55, height: width * 0.55, maxHeight: 512, maxWidth: 512 }}\n                      value={`zcash:${zaddr}?amount=0.001&memo=${memo}`}\n                    />\n                  </Box>\n                  <Row\n                    bg=\"#F1F1F1\"\n                    borderRadius={4}\n                    p=\"8px\"\n                    px={12}\n                    mt={32}\n                    alignItems=\"center\"\n                  >\n                    <Text as=\"codespan\" style={{ wordBreak: 'break-all' }} fontFamily=\"IBM Plex Mono\" fontSize={12} lineHeight={16}>{`zcash:${zaddr}?amount=0.001&memo=${memo}`}</Text>\n                    <Box\n                      style={{ cursor: 'pointer' }}\n                      ml={16}\n                      width={32}\n                      height={32}\n                      // borderWidth={1}\n                      // borderColor=\"black\"\n                      alignItems=\"center\"\n                      justifyContent=\"center\"\n                      onClick={async () => {\n                        await copyTextToClipboard(`zcash:${zaddr}?amount=0.001&memo=${memo}`);\n                        setCopyIsClicked(true);\n                        setTimeout(() => { setCopyIsClicked(false); setCopyIsHovered(false); }, 200);\n                      }}\n                      onMouseEnter={() => setCopyIsHovered(true)}\n                      onMouseLeave={() => { setCopyIsHovered(false); }}\n                      style={{ ...(copyIsHovered && { opacity: 0.5 }), ...(copyIsClicked && { opacity: 0.1 })}}\n                    >\n                      {/* <CopyIcon /> */}\n                      <Icon icon={CopyBoxIcon} color=\"black\" />\n                    </Box>\n                  </Row>\n                </Box>\n                <Row justifyContent=\"flex-end\">\n                  <Button onClick={() => setStage('tweet')} fontFamily=\"IBM Plex Serif\" fontWeight={600} py=\"8px\" px={24}>\n                    Next\n                  </Button>\n                </Row>\n              </Section>\n            </>\n          ),\n          tweet: (\n            <>\n              <Section>\n                <Row justifyContent=\"flex-end\">\n                  <Text as=\"p\" fontFamily=\"IBM Plex Sans\" fontSize={24} mb={24} bold>\n                    2 / 2\n                  </Text>\n                </Row>\n                <Box alignItems=\"center\">\n                  <Text fontFamily=\"IBM Plex Sans\" fontSize={24} fontWeight={600} mb={20}>Post to Twitter</Text>\n                  <Text mb={80}></Text>\n                  <a href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(post)}`} target=\"_blank\">\n                    <Button borderWidth={0} mb={32} borderRadius=\"2px\" bg=\"#1B9DF0\" fontSize={16} fontFamily=\"IBM Plex Sans\" color=\"white\">\n                      Tweet via Twitter.com\n                    </Button>\n                  </a>\n                  <Row\n                    bg=\"#F1F1F1\"\n                    borderRadius={4}\n                    p=\"8px\"\n                    px={12}\n                    mt={32}\n                    alignItems=\"center\"\n                  >\n                    <a href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(post)}`} target=\"_blank\">\n                      <Text color=\"blue\" style={{ textDecoration: 'underline', wordBreak: 'break-all' }}>\n                        {`https://twitter.com/intent/tweet?text=${encodeURIComponent(post)}`}\n                      </Text>\n                    </a>\n                    <Box\n                      style={{ cursor: 'pointer' }}\n                      ml={16}\n                      width={32}\n                      height={32}\n                      borderWidth={1}\n                      borderColor=\"black\"\n                      alignItems=\"center\"\n                      justifyContent=\"center\"\n                      onClick={async () => {\n                        await copyTextToClipboard(`https://twitter.com/intent/tweet?text=${encodeURIComponent(post)}`);\n                        setCopyIsClicked(true);\n                        setTimeout(() => { setCopyIsClicked(false); setCopyIsHovered(false); }, 200);\n                      }}\n                      onMouseEnter={() => setCopyIsHovered(true)}\n                      onMouseLeave={() => { setCopyIsHovered(false); }}\n                      style={{ ...(copyIsHovered && { opacity: 0.5 }), ...(copyIsClicked && { opacity: 0.1 })}}\n                    >\n                      <CopyIcon />\n                    </Box>\n                  </Row>\n                  <Box mt={40}>\n                    <Button onClick={() => setStage('write')} mb={40} style={{ cursor: 'pointer' }}>\n                      Write New Post\n                    </Button>\n                  </Box>\n                </Box>\n              </Section>\n            </>\n          ),\n        }[stage]}\n        \n        <Box\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          flex={1}\n          p={40}\n        >\n          <Box />\n          <Link to=\"https://github.com/macintoshhelper/microblog\">\n            <Button outlined={false}>\n              <Button.Text color=\"blue\" fontFamily=\"Helvetica\" fontSize={[6, 5, 4]}>\n                GitHub\n                <Text bold fontSize={[6, 5, 4]}>\n                  {` >`}\n                </Text>\n              </Button.Text>\n            </Button>\n          </Link>\n        </Box>\n      </Box>\n      {/* <Footer /> */}\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"sourceRoot":""}